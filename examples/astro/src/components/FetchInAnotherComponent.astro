<fieldset>
    <legend>Query 2</legend>

    <p id="data-foo">Data:</p>
    <p id="isLoading-foo">Is loading:</p>
    <p id="error-foo">Error:</p>

    <button id="invalidate-foo">Invalidate</button>
    <button id="refetch-foo">Refetch</button>
</fieldset>

<script>
    import { effect } from "lager/effect";
    import { lager } from "../stores/lager";

    const $data = document.getElementById("data-foo") as HTMLParagraphElement;
    const $isLoading = document.getElementById("isLoading-foo") as HTMLParagraphElement;
    const $error = document.getElementById("error-foo") as HTMLParagraphElement;
    const $invalidate = document.getElementById("invalidate-foo") as HTMLButtonElement;
    const $refetch = document.getElementById("refetch-foo") as HTMLButtonElement;

    const apiQuery = lager.query({
        queryKey: ["api"],
        queryFn: () => fetch("http://localhost:4321/api?wait=3000").then((res) => res.text())
    })

    $invalidate.addEventListener("click", async () => {
        console.log("Invalidate");
        await lager.invalidateQueries({
            queryKey: ["api"]
        });
    });

    $refetch.addEventListener("click", async () => {
        console.log("Refetch");
        await apiQuery.refetch();
    });

    effect(() => {
        $data.textContent = `Data: ${apiQuery.data}`;
        $isLoading.textContent = `Is loading: ${apiQuery.isLoading}`;
        $error.textContent = `Error: ${apiQuery.error}`;
    });
</script>